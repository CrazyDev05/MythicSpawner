plugins {
    id 'java'
    id "com.gradleup.shadow" version "8.3.3"
    id "xyz.jpenilla.run-paper" version "2.3.1"
}

group = 'de.crazydev22'
version = '1.0.0'

repositories {
    mavenCentral()
    maven { url "https://repo.papermc.io/repository/maven-public/" }
    maven { url "https://oss.sonatype.org/content/groups/public/" }
    maven { url 'https://mvn.lumine.io/repository/maven-public/' }
    maven { url "https://repo.oraxen.com/releases" }
    maven { url "https://jitpack.io" }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    compileOnly "io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT"

    compileOnly "io.th0rgal:oraxen:1.183.0"
    compileOnly 'io.lumine:Mythic-Dist:5.6.1'
    implementation 'com.jeff-media:custom-block-data:2.2.3'
    implementation 'com.github.VolmitDev:MultiBurst:22.9.2'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

runServer {
    minecraftVersion("1.21.1")
}

shadowJar {
    archiveClassifier = null
    relocate 'com.jeff_media.customblockdata', 'de.crazydev22.spawner.customblockdata'
    relocate 'art.arcane.multiburst', 'de.crazydev22.spawner.multiburst'
}

tasks.build.dependsOn(shadowJar)